# -!- coding: utf-8 -!-
import os
import shutil

import pandas as pd

business_type_count={}
#以下为新的分类
link1='D:\按行业划分数据集\采矿业'
link2='D:\按行业划分数据集\电力热力燃气及水生产和供应业'
link3='D:\按行业划分数据集\房地产业'
link4='D:\按行业划分数据集\公共管理社会保障和社会组织'
link5='D:\按行业划分数据集\国际组织'
link6='D:\按行业划分数据集\建筑业'
link7='D:\按行业划分数据集\交通运输仓储和邮政业'
link8='D:\按行业划分数据集\教育'
link9='D:\按行业划分数据集\金融业'
link10='D:\按行业划分数据集\居民服务修理和其他服务业'
link11='D:\按行业划分数据集\科学研究和技术服务业'
link12='D:\按行业划分数据集\农林牧渔业'
link13='D:\按行业划分数据集\批发和零售业'
link14='D:\按行业划分数据集\水利环境和公共设施管理业'
link15='D:\按行业划分数据集\卫生和社会工作'
link16='D:\按行业划分数据集\文化体育和娱乐业'
link17='D:\按行业划分数据集\信息传输软件和信息技术服务业'
link18_1='D:\按行业划分数据集\制造业_轻纺工业'
link18_2='D:\按行业划分数据集\制造业_资源加工工业'
link18_3='D:\按行业划分数据集\制造业_机械电子制造业'
link19='D:\按行业划分数据集\住宿和餐饮业'
link20='D:\按行业划分数据集\租赁和商务服务业'

#以下为旧的分类
#采矿业
class1=['土砂石开采\xa0','其他开采专业及辅助行活动\xa0','石油和天然气开采专业及辅助性活动\xa0','常用有色金属矿采选\xa0','化学矿采选\xa0','贵金属矿采选\xa0','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'其他采矿业\xa0','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#电力、热力、燃气及水生产和供应业
class2=['电力供应\xa0','其中:电厂生产全部耗用电量\xa0','自来水生产和供应\xa0','自来水生产和供应','其中:电厂生产全部耗用电量','其中:电厂生产全部耗用电量 ','太阳能发电\xa0','电厂生产全部耗用电量\xa0','煤化工\xa0','2.燃气生产和供应业\xa0','热力生产和供应\xa0','线路损失电量\xa0','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#房地产业
class3=['其他房地产业\xa0','房地产租赁经营\xa0','房地产开发经营\xa0','其他房地产业 ','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#公共管理、社会保障和社会组织
class4=['⑴中国共产党机关\xa0','群众团体 ','群众团体','[1]中国共产党机关','技能培训、教育辅助及其他教育\xa0','高等教育 ','技能培训、教育辅助及其他教育','中等教育\xa0','国家行政机构\xa0','其他国家机构\xa0','国家权力机构 ','国家行政机构 ','国家权力机构\xa0','中国共产党机关\xa0','⑹国际组织\xa0','人民法院和人民检察院\xa0','中国共产党机关','村民自治组织\xa0','社区居民自治组织\xa0','宗教组织\xa0','群众团体\xa0','城镇居民\xa0','乡村居民\xa0','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#国际组织
class5=['','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#建筑业
class6=['房屋建筑业 ','房屋建筑业','其他未列明建筑业\xa0','房屋建筑业\xa0','土木工程建筑业','建筑安装业','建筑装饰和装修业\xa0','土木工程建筑业\xa0','3.建筑安装业\xa0','2.土木工程建筑业\xa0','1.房屋建筑业\xa0','提供施工设备服务\xa0','建筑物拆除和场地准备活动\xa0','建筑物拆除和场地准备活动 ','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#交通运输、仓储和邮政业
class7=['道路运输辅助活动\xa0','公路旅客运输\xa0','城市公共交通运输\xa0','道路货物运输\xa0','水上货物运输\xa0','铁路旅客运输\xa0','铁路货物运输\xa0','其他水上运输辅助活动\xa0','铁路运输辅助活动\xa0','4.航空运输业\xa0','运输代理业\xa0','航空运输业','水上旅客运输\xa0','其他仓储业\xa0','谷物、棉花等农产品仓储\xa0','邮政基本服务','邮政基本服务\xa0','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#教育
class8=['初等教育\xa0','学前教育\xa0','高等教育\xa0','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#金融业
class9=['货币银行服务 ','货币银行服务\xa0','其他未列明的金融活动\xa0','金融信托与管理服务\xa0','人身保险\xa0','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#居民服务、修理和其他服务业
class10=['铁路、船舶、航空航天等运输设备修理\xa0','其他居民服务业\xa0','会议、展览及相关服务\xa0','其他未列明服务业\xa0','充换电服务业\xa0','充换电服务业 ','殡葬服务\xa0','洗浴和保健养生服务\xa0','清洁服务\xa0','快递服务\xa0','其他寄递服务\xa0','装订及其他印刷服务活动\xa0','装卸搬运\xa0','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#科学研究和技术服务业
class11=['农业科学研究和试验发展\xa0','自然科学研究和试验发展\xa0','工程和技术研究和试验发展\xa0','工业与专业设计及其他专业技术服务\xa0','其他科技推广服务业\xa0','气象服务\xa0','质检技术服务\xa0','工程技术与设计服务\xa0','信息处理和存储支持服务\xa0','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#农、林、牧、渔业
class12=['1.农业\xa0','农业','1.农业','1.农业 ','农业\xa0','2.林业\xa0','3.畜牧业\xa0','畜牧业','4.渔业\xa0','渔业','5.农、林、牧、渔专业及辅助性活动\xa0','农、林、牧、渔专业及辅助性活动\xa0','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#批发和零售业
class13=['食品、饮料及烟草制品批发','食品、饮料及烟草制品批发','食品、饮料及烟草制品批发\xa0','食品、饮料及烟草制品专门零售\xa0','矿产品、建材及化工产品批发\xa0','文化、体育用品及器材批发\xa0','医药及医疗器材批发 ','机械设备、五金产品及电子产品批发\xa0','其他批发业\xa0','农、林、牧、渔产品批发\xa0','农、林、牧、渔产品批发','纺织、服装及家庭用品批发 ','医药及医疗器材批发\xa0','纺织、服装及家庭用品批发\xa0','纺织、服装及家庭用品批发','医药及医疗器材专门零售','文化、体育用品及器材专门零售\xa0','家用电器及电子产品专门零售','综合零售 ','医药及医疗器材专门零售\xa0','家用电器及电子产品专门零售 \xa0','综合零售\xa0','五金、家具及室内装饰材料专门零售\xa0','纺织、服装及日用品专门零售\xa0','货摊、无店铺及其他零售业\xa0','其他汽车、摩托车、零配件和燃料及其他动力销售\xa0','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#水利、环境和公共设施管理业
class14=['市政设施管理\xa0','其他水利管理业\xa0','生态保护\xa0','环境治理业','公共照明','其中：公共照明业\xa0','公共照明\xa0','公共照明 ','其他水的处理、利用与分配\xa0','其中：排灌\xa0','水资源管理\xa0','污水处理及其再生利用\xa0','排灌\xa0','排灌','防洪除涝设施管理\xa0','城市公园管理\xa0','环境治理业\xa0','环境卫生管理\xa0','市政设施管理\xa0','城市公园管理','绿化管理\xa0','港口岸电\xa0','装表临时用电','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#卫生和社会工作
class15=['专业公共卫生服务\xa0','其他卫生活动\xa0','医院\xa0','社会团体\xa0','社会团体','(7)社会保障\xa0','基层医疗卫生服务\xa0','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#文化、体育和娱乐业
class16=['出版业\xa0','其他文化艺术业\xa0','文物及非物质文化遗产保护\xa0','体育场地设施管理\xa0','其他体育\xa0','体育组织\xa0','其他娱乐活动\xa0','室内娱乐活动\xa0','健身休闲活动\xa0','群众文体活动\xa0','博物馆\xa0','图书馆与档案馆\xa0','艺术表演场馆\xa0','游乐园\xa0','游览景区管理 ','千岛湖镇青溪村湖坑\xa0','文艺创作与表演\xa0','休闲观光活动\xa0','影视节目制作\xa0','电视\xa0','游览景区管理\xa0','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#信息传输、软件和信息技术服务业
class17=['电信\xa0','电信','软件开发\xa0','其他信息技术服务业\xa0','信息技术咨询服务\xa0','广播\xa0','广播电视传输服务\xa0','电影和广播电视节目发行\xa0','卫星传输服务\xa0','互联网信息服务\xa0','互联网数据服务\xa0','互联网接入及相关服务\xa0','技术推广服务\xa0','其他计算机服务\xa0','信息系统集成服务\xa0','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
# link18_1='C:\按行业划分数据集\制造业_轻纺工业'
# link18_2='C:\按行业划分数据集\制造业_资源加工工业'
# link18_1='C:\按行业划分数据集\制造业_机械、电子制造业'
#制造业_轻纺工业
class18_1=['其他农副食品加工 \xa0','其他未列名制造业','其他未列明通用设备制造业\xa0','其他未列明的制造业 ','其他未列明的制造业\xa0','饮料制造\xa0','机织服装制造 ','竹、藤家具制造\xa0','羽毛(绒)加工及制品制造\xa0','家用纺织制成品制造\xa0','塑料丝、绳及编织品制造\xa0','纸制品制造\xa0','机织服装制造\xa0',
'木质家具制造\xa0','罐头食品制造\xa0','竹、藤、棕、草等制品制造\xa0','软木制品及其他木制品制造\xa0','其他食品制造\xa0','焙烤食品制造\xa0','木材加工\xa0','造纸\xa0','服饰制造\xa0','塑料家具制造\xa0',
'酒的制造\xa0','文教办公用品制造\xa0','工艺美术及礼仪用品制造 ','体育用品制造\xa0','日用杂品制造\xa0','皮革制品制造\xa0','乳制品制造\xa0','糖果、巧克力及蜜饯制造\xa0',
'印刷\xa0','棉纺织及印染精加工\xa0','毛纺织和染整精加工\xa0','谷物磨制\xa0','植物油加工\xa0','方便食品制造\xa0','蔬菜、菌类、水果和坚果加工\xa0','屠宰及肉类加工\xa0','工艺美术及礼仪用品制造\xa0','中药饮片加工\xa0','产业用纺织制成品制造\xa0','其他家具制造\xa0','针织或钩针编织物及其制品制造\xa0','丝绢纺织及印染精加工\xa0','水产品加工\xa0','毛皮鞣制及制品加工\xa0','纸浆制造\xa0','玩具制造\xa0'
,'针织或钩针编织服装制造\xa0','木容器制造\xa0','塑料人造革、合成革制造\xa0','搪瓷卫生洁具制造\xa0','麻纺织和染整精加工\xa0','调味品、发酵制品制造\xa0','⑴.橡胶制品业\xa0','棉纺织及印染精加工 ','皮革鞣制加工\xa0','饲料加工 \xa0','精制茶加工\xa0','建筑用木料及木材组件加工\xa0'
]
#制造业_资源加工工业
class18_2=['玻璃保温容器制造\xa0','橡胶板、管、带的制造\xa0','特种陶瓷制品制造\xa0','塑料板、管、型材制造\xa0','特种玻璃制造\xa0','玻璃纤维及制品制造\xa0','农用及园林用金属工具制造\xa0','兽用药品制造\xa0','有色金属合金制造\xa0','其他金属工具制造(','金属加工机械制造\xa0','手工具制造\xa0','其他金属工具制造(\xa0','铸造及其他金属制品制造\xa0','专用化学产品制造\xa0','结构性金属制品制造\xa0','再生橡胶制造\xa0','环保、邮政、社会公共服务及其他专用设备制造\xa0','水泥制造\xa0','水泥制造','其中:水泥制造\xa0','泡沫塑料制造\xa0','塑料零件制造及其他塑料制品制造\xa0','其他橡胶制品制造\xa0','生物药品制品制造\xa0','砖瓦、石材等建筑材料制造\xa0','耐火材料制品制造\xa0','合成材料制造\xa0','卫生材料及医药用品制造\xa0','石膏、水泥制品及类似制品制造\xa0','其他玻璃制造\xa0','金属制日用品制造\xa0','印刷、制药、日化及日用品生产专用设备制造\xa0','水泥、石灰和石膏制造\xa0','刀剪及类似日用金属工具制造\xa0','精炼石油产品制造\xa0','基础化学原料制造\xa0','平板玻璃制造\xa0','日用陶瓷制品制造\xa0','技术玻璃制品制造\xa0','纤维素纤维原料及纤维制造\xa0','结构性金属制品制造 ','生物基材料制造\xa0','有色金属压延加工\xa0','日用化学产品制造\xa0','化纤织造及印染精加工\xa0','金属废料和碎屑加工处理\xa0','塑料包装箱及容器制造\xa0','涂料、油墨、颜料及类似产品制造\xa0','橡胶零件制造\xa0','金属丝绳及其制品制造\xa0','石墨及其他非金属矿物制品制造\xa0','非金属废料和碎屑加工处理\xa0','运动场地用塑胶制造\xa0','人造板制造\xa0','日用塑料制造\xa0','化学药品原料药制造\xa0','化工、木材、非金属加工专用设备制造\xa0','光学玻璃制造\xa0','化学药品制剂制造\xa0','日用及医用橡胶制品制造\xa0','肥料制造\xa0','卫生陶瓷制品制造\xa0','其他陶瓷制品制造\xa0','水泥、石灰和石膏制造 ','玻璃纤维增强塑料制品制造\xa0','煤制品制造\xa0','日用玻璃制品制造\xa0','中成药生产\xa0','金属铸、锻加工\xa0','合成纤维制造\xa0','金属家具制造\xa0','金属制品修理\xa0','生物质燃料加工\xa0','金属表面处理及热处理加工\xa0','铁合金冶炼\xa0','常用有色金属冶炼 ','稀有稀土金属冶炼\xa0','贵金属冶炼\xa0','碳化硅\xa0','制鞋业\xa0','常用有色金属冶炼\xa0','炼钢\xa0']
#制造业_机械、电子制造业
class18_3=['城市轨道交通设备制造\xa0','⑶机动车、电子产品和日用产品修理业\xa0','机动车、电子产品和日用产品修理业','机动车、电子产品和日用产品修理业\xa0','仪器仪表修理\xa0','汽车用发动机制造\xa0','航空、航天器及设备制造\xa0','船舶及相关装置制造\xa0','其他金属工具制造( ','自行车和残疾人座车制造\xa0','文化、办公用机械制造\xa0','电池制造\xa0','轴承、齿轮和传动部件制造\xa0','切削工具制造\xa0','其他仪器仪表的制造\xa0','纺织、服装和皮革工业专用设备制造\xa0','电子元件及电子专用材料制造\xa0','铁路运输设备制造\xa0','通信设备制造\xa0','其他电气机械及器材制造\xa0','建筑、安全用金属制品制造\xa0','轮胎制造\xa0','塑料薄膜制造\xa0','其他金属工具制造','物料搬运设备制造\xa0','电子器件制造\xa0','其他玻璃制品制造\xa0','泵、阀门、压缩机及类似机械制造\xa0','非专业视听设备制造\xa0','通用零部件制造\xa0','家用电力器具制造\xa0','电机制造\xa0','烘炉、风机、包装等设备制造\xa0','锅炉及辅助设备、其他原动设备制造\xa0','专用仪器仪表制造\xa0','特殊作业机器人制造\xa0','农、林、牧、渔专用机械制造\xa0','搪瓷日用品及其他搪瓷制品制造\xa0','汽车零部件及配件制造\xa0','光学仪器制造\xa0','摩托车制造\xa0','新能源车整车制造\xa0','钢压延加工\xa0','交通器材及其他交通运输设备制造\xa0','通用仪器仪表制造\xa0','其他电子设备制造\xa0','电子和电工机械专用设备制造\xa0','医疗仪器设备及器械制造\xa0','电线、电缆、光缆及电工器材制造\xa0','其他输配电及控制设备制造\xa0','照明器具制造\xa0','广播电视设备制造\xa0','食品、饮料、烟草及饲料生产专用设备制造\u3000\u3000\xa0','服务消费机器人制造\xa0','电车制造\xa0','汽柴油车整车制造\xa0','非电力家用器具制造\xa0','游艺器材及娱乐用品制造\xa0','集装箱及金属包装容器制造\xa0','采矿、冶金、建筑专用设备制造\xa0','其他机械和设备修理业\xa0']

#住宿和餐饮业
class19=['其他住宿业\xa0','提供住宿社会工作\xa0','其他住宿业 ','其他餐饮业\xa0','正餐服务\xa0','快餐服务\xa0','旅游饭店\xa0','旅游饭店 ','一般旅馆\xa0','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']
#租赁和商务服务业
class20=['机械设备经营租赁\xa0','其他商务服务\xa0','其他商务服务 ','其他商务服务','咨询与调查\xa0','文体设备和用品出租\xa0','','组织管理服务\xa0','综合管理服务\xa0','组织管理服务 ','物业管理\xa0','广告业\xa0','贸易经纪与代理\xa0','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','',
'','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','']

def oldtype_to_newtype(type):
    if type in class1:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link1 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class2:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link2 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class3:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link3 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class4:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link4 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class5:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link5 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class6:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link6 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class7:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link7 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class8:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link8 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class9:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link9 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class10:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link10 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class11:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link11 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class12:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link12 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class13:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link13 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class14:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link14 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class15:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link15 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class16:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link16 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class17:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link17 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class18_1:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link18_1 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class18_2:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link18_2 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class18_3:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link18_3 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class19:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link19 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)
    if type in class20:
        # print(root)
        a = root.split("\\")[-2]
        b = root.split("\\")[-1]
        link_new = link20 + "\\" + a + "\\" + b
        shutil.copytree(root, link_new)



#遍历所有文件，提取企业类型，把企业类型放到字典business_type_count中
#字典的键为企业类型，值为计数
for root, dirs, filelist in os.walk("D:\\用电数据集_已完成数据分类\\浙江省电力公司2021\\浙江省电力公司2021\\杭州供电公司"):
    #print(root)
    for i in filelist:
        if i=='MT_data.csv':
            try:
                MT_data = pd.read_csv(root+"\\"+i, encoding='utf-8', sep=',')
            except:
                MT_data = pd.read_csv(root+"\\"+i, encoding='gbk', sep=',')
            type=MT_data['business_type'][0]
            if type not in business_type_count:
                business_type_count[type]=1
            else:
                business_type_count[type]=business_type_count[type]+1
            break
        if i=='RT_data.csv':
            try:
                RT_data = pd.read_csv(root+"\\"+i, encoding='utf-8', sep=',')
            except:
                RT_data = pd.read_csv(root+"\\"+i, encoding='gbk', sep=',')

            type=RT_data['business_type'][0]

            if type not in business_type_count:
                business_type_count[type]=1
            else:
                business_type_count[type]=business_type_count[type]+1
            break
        if i=='ST_data.csv':
            try:
                ST_data = pd.read_csv(root+"\\"+i, encoding='utf-8', sep=',')
            except:
                ST_data = pd.read_csv(root+"\\"+i, encoding='gbk', sep=',')
            type=ST_data['business_type'][0]
            if type not in business_type_count:
                business_type_count[type]=1
            else:
                business_type_count[type]=business_type_count[type]+1
            break
print(business_type_count)
print(len(business_type_count))

#旧分类-->新分类
for root, dirs, filelist in os.walk("D:\\用电数据集_已完成数据分类\\浙江省电力公司2021\\浙江省电力公司2021\\杭州供电公司"):
    for i in filelist:
        if i == 'MT_data.csv':
            try:
                MT_data = pd.read_csv(root + "\\" + i, encoding='utf-8', sep=',')
            except:
                MT_data = pd.read_csv(root + "\\" + i, encoding='gbk', sep=',')
            type = MT_data['business_type'][0]
            oldtype_to_newtype(type)#把文件从旧的分类文件夹拷贝到新的分类文件夹中
            break
        if i == 'RT_data.csv':
            try:
                RT_data = pd.read_csv(root + "\\" + i, encoding='utf-8', sep=',')
            except:
                RT_data = pd.read_csv(root + "\\" + i, encoding='gbk', sep=',')
            type = RT_data['business_type'][0]

            oldtype_to_newtype(type)
            break
        if i == 'ST_data.csv':
            try:
                ST_data = pd.read_csv(root + "\\" + i, encoding='utf-8', sep=',')
            except:
                ST_data = pd.read_csv(root + "\\" + i, encoding='gbk', sep=',')
            type = ST_data['business_type'][0]
            oldtype_to_newtype(type)
            break
